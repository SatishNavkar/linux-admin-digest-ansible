---
- name: VXVM-FS-creation-sybase-DB
  hosts: '{{ variable_host }}'
  order: sorted
  gather_facts: False
  remote_user: '{{ variable_user }}'
  become: '{{ become_true_false }}'
  become_method: '{{ variable_become_method }}'
  become_user: '{{ variable_become_user }}'

  vars:
    skip: 0
    path: /opt/VRTS/bin

  tasks:
    - name: Copy csv file to '{{ variable_host }}'
      copy:
        src: "{{ path_to_csv }}"
        dest: "/var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-VxVM-setup.csv"
        mode: '0400'

    - name: Remove blank spaces from CSV to avoid errors
      shell: sed -i "s/ //g" /var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-VxVM-setup.csv

    - name:
      shell: |
        vxdisk -o alldgs list > /var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-vxvmBefore-`date +"%m_%d_%Y_%H_%M_%S"`.txt
        ls -l /var/tmp/*.txt
        id sybase
        if [ $? -eq 0 ]; then
           echo '====' > /dev/null;
        else
           echo FAILED: Install sybase first under /opt/sybase;
           exit 50;
        fi;
      register: contents_0
    - debug:
        msg:
          - " ---- Prechecks ------ "
          - "{{ contents_0.stdout }}"

    - name:
      shell: |
        echo --- given disks are free or not ---;
        for i in `grep id-disk /var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-VxVM-setup.csv | awk -F"," '{print $1 ":" $2 ":" $3 ":" $4 ":" $5}'`;
        do
          {{path}}/vxdisk -o alldgs list | grep `echo $i | awk -F":" '{ print $3 }'` | grep 'auto:none' > /dev/null;
          if [ $? -eq 0 ]; then
            echo "===" > /dev/null;
          else
            echo FAILED: Double check list of disks;
            exit 100;
          fi;
        done;
        echo ----------------------------
        echo --- Take disks under VxVM control ---
        for i in `grep id-disk /var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-VxVM-setup.csv | awk -F"," '{print $1 ":" $2 ":" $3 ":" $4 ":" $5}'`;
        do
          {{ path }}/vxdisksetup -i `echo $i|awk -F":" '{print $3}'`
          echo vxdisksetup -i `echo $i|awk -F":" '{print $3}'`
          echo ------;
          {{ path }}/vxdisk -o alldgs list | grep `echo $i|awk -F":" '{ print $3 }'` | grep 'auto:cdsdisk' > /dev/null;
          if [ $? -eq 0 ]; then
            echo '====' > /dev/null;
          else
            echo FAILED: Disk is not taken under VxVM control, plz investigate;
            exit 200;
          fi;
        done;
      register: contents_1
      when: not skip
    - debug:
        msg:
          - "=== PART-1 : Taking disks under VxVM control "
          - "{{ contents_1.stdout }}"
      when: not skip

    - name:
      shell: |
        for i in `grep id-dginit /var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-VxVM-setup.csv | awk -F"," '{print $1 ":" $2 ":" $3 ":" $4 ":" $5}'`;
        do
         {{ path }}/vxdg init `echo $i|awk -F":" '{ print $1 }'` `echo $i|awk -F":" '{ print $2 }'`=`echo $i|awk -F":" '{ print $3 }'`;
         echo vxdg init `echo $i|awk -F":" '{ print $1 }'` `echo $i|awk -F":" '{ print $2 }'`=`echo $i|awk -F":" '{ print $3 }'`;
         echo -----;
        done
      register: contents_2
    - debug:
        msg:
          - "=== PART-2 : Initializing DG with first disk "
          - "{{ contents_2.stdout }}"

    - name:
      shell:
        for i in `grep id-dgadd /var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-VxVM-setup.csv | awk -F"," '{print $1 ":" $2 ":" $3 ":" $4 ":" $5}'`;
        do
          {{ path }}/vxdg -g `echo $i|awk -F":" '{ print $1 }'` adddisk `echo $i|awk -F":" '{ print $2 }'`=`echo $i|awk -F":" '{ print $3 }'`;
          echo vxdg -g `echo $i|awk -F":" '{ print $1 }'` adddisk `echo $i|awk -F":" '{ print $2 }'`=`echo $i|awk -F":" '{ print $3 }'`;
          echo -----;
        done
      register: contents_3
    - debug:
        msg:
          - "=== PART-3 : Taking remaining disks under DG control "
          - "{{ contents_3.stdout }}"

    - name:
      shell: |
        for i in `grep id-vol /var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-VxVM-setup.csv | awk -F"," '{ print $1 ":" $2 ":" $3 ":" $4 ":" $5 ":" $6 ":" $7 ":" $8 ":" $9 }'`;
        do
          echo --`echo $i|awk -F":" '{ print $2 }'`--;
          echo vxassist -g `echo $i|awk -F":" '{ print $1 }'` make `echo $i|awk -F":" '{ print $2 }'` `echo $i|awk -F":" '{ print $3 }'` `echo $i|awk -F":" '{ print $7 }'` `echo $i|awk -F":" '{ print $8 }'` `echo $i|awk -F":" '{ print $9 }'`;
          {{ path }}/vxassist -g `echo $i|awk -F":" '{ print $1 }'` make `echo $i|awk -F":" '{ print $2 }'` `echo $i|awk -F":" '{ print $3 }'` `echo $i|awk -F":" '{ print $7 }'` `echo $i|awk -F":" '{ print $8 }'` `echo $i|awk -F":" '{ print $9 }'`;
          if [ $? -eq 64 ];
          then
            dgname=`echo $i|awk -F":" '{ print $1 }'`
            csize=`{{ path }}/vxassist -g $dgname maxsize | awk '{ print $5 }' | tr -d '(),'`;
            {{ path }}/vxassist -g `echo $i|awk -F":" '{ print $1 }'` make `echo $i|awk -F":" '{ print $2 }'` `echo $i|awk -F":" '{ print $3 }'` `echo $i|awk -F":" '{ print $7 }'` `echo $i|awk -F":" '{ print $8 }'` `echo $i|awk -F":" '{ print $9 }'`;
            echo vxassist -g `echo $i|awk -F":" '{ print $1 }'` make `echo $i|awk -F":" '{ print $2 }'` `echo $i|awk -F":" '{ print $3 }'` `echo $i|awk -F":" '{ print $7 }'` `echo $i|awk -F":" '{ print $8 }'` `echo $i|awk -F":" '{ print $9 }'`;
            echo ===**===;
          else
            echo --- > /dev/null;
          fi;
        done;
      register: contents_4
    - debug:
        msg:
          - "=== PART-4 : Creating volumes based on layout and size "
          - "{{ contents_4.stdout }}"

    - name:
      shell: |
        for i in `grep id-dgadd /var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-VxVM-setup.csv | awk -F"," '{print $1 ":" $2 ":" $3 ":" $4 ":" $5}'`;
        do
          {{ path }}/vxedit -g `echo $i|awk -F":" '{ print $1 }'` set user=sybase group=sybase `echo $i|awk -F":" '{ print $2 }'`;
          echo vxedit -g `echo $i|awk -F":" '{ print $1 }'` set user=sybase group=sybase `echo $i|awk -F":" '{ print $2 }'`;
          echo -------;
        done;
        for i in `grep id-vol /var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-VxVM-setup.csv | awk -F"," '{print $1 ":" $2 ":" $3 ":" $4 ":" $5}'`;
        do
         ls -l /dev/vx/dsk/`echo $i|awk -F":" '{ print $1 }'`/`echo $i|awk -F":" '{ print $2 }'`;
        done
      register:
    - debug:
        msg:
          - "=== PART-5 : Volume ownership changed for sybase usage "
          - "{{ contents_5.stdout }}"

    - name:
      shell: |
        for i in `grep id-mkfs /var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-VxVM-setup.csv | awk -F"," '{print $1 ":" $2 ":" $3 ":" $4 ":" $5 ":" $6}'`;
        do
          umount -l /mnt;
          mount -t vxfs /dev/vx/dsk/`echo $i|awk -F":" '{ print $1 }'`/`echo $i|awk -F":" '{ print $2 }'` /mnt
          if [ $? -eq 1 ];
          then
            mkfs.vxfs /dev/vx/dsk/`echo $i|awk -F":" '{ print $1 }'`/`echo $i|awk -F":" '{ print $2 }'`
          else
            echo "DO NOT provide vols that are formatted";
            umount -l /mnt;
          fi;
          mkdir -p `echo $i|awk -F":" '{ print $6 }'`;
          echo chown sybase:sybase `echo $i|awk -F":" '{ print $6 }'`;
        done
        echo ------------------------------------------;
        echo -- Additional steps for non-VCS setup ----;
        for i in `grep id-mkfs /var/tmp/{{ variable_user }}_Rundeck{{ job_id }}-VxVM-setup.csv | awk -F"," '{print $1 ":" $2 ":" $3 ":" $4 ":" $5 ":" $6}'`;
        do
         cp /etc/fstab /etc/fstab_Rundeck-`date +"%m_%d_%Y_%H_%M_%S"`;
         chown sybase:sybase `echo $i|awk -F":" '{ print $6 }'`;
        done
      register:
    - debug:
        msg:
          - "=== PART-6 : Mounting of formatted Volumes "
          - "{{ contents_6.stdout }}"        
